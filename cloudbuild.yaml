# cloudbuild.yaml
substitutions:
  _AR_HOSTNAME: us-central1-docker.pkg.dev
  _AR_REPOSITORY: feedback-portal-repo

steps:
  # 1. Build the backend container image
  - name: 'gcr.io/cloud-builders/docker'
    id: build-backend
    dir: backend
    args:
      - 'build'
      - '-t'
      - '${_AR_HOSTNAME}/$PROJECT_ID/${_AR_REPOSITORY}/feedback-api:latest'
      - '.'

  # 2. Push the backend container image
  - name: 'gcr.io/cloud-builders/docker'
    id: push-backend
    args:
      - 'push'
      - '${_AR_HOSTNAME}/$PROJECT_ID/${_AR_REPOSITORY}/feedback-api:latest'

  # 3. Deploy backend to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: deploy-backend
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'feedback-api'
      - '--image'
      - '${_AR_HOSTNAME}/$PROJECT_ID/${_AR_REPOSITORY}/feedback-api:latest'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--set-env-vars=MONGO_CONNECTION_STRING=$${_MONGO_CONNECTION_STRING}' # Set env var from secret
    secretEnv:
      - _MONGO_CONNECTION_STRING

  # 4. Get Backend Service URL
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: get-backend-url
    entrypoint: gcloud
    args:
      - 'run'
      - 'services'
      - 'describe'
      - 'feedback-api'
      - '--platform'
      - 'managed'
      - '--region'
      - 'us-central1'
      - '--format=value(status.url)'
    env:
      - 'BACKEND_URL=$(gcloud run services describe feedback-api --platform managed --region us-central1 --format=value(status.url))'

  # 5. Build the frontend container image with backend URL
  - name: 'gcr.io/cloud-builders/docker'
    id: build-frontend
    args:
      - 'build'
      - '-t'
      - '${_AR_HOSTNAME}/$PROJECT_ID/${_AR_REPOSITORY}/feedback-frontend:latest'
      - '-f'
      - 'Dockerfile.frontend'
      - '.'
      - '--build-arg'
      - 'API_URL=$(cat /workspace/backend_url.txt)' # Pass backend URL as build arg

  # 6. Push the frontend container image
  - name: 'gcr.io/cloud-builders/docker'
    id: push-frontend
    args:
      - 'push'
      - '${_AR_HOSTNAME}/$PROJECT_ID/${_AR_REPOSITORY}/feedback-frontend:latest'

  # 7. Deploy frontend to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: deploy-frontend
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'feedback-frontend'
      - '--image'
      - '${_AR_HOSTNAME}/$PROJECT_ID/${_AR_REPOSITORY}/feedback-frontend:latest'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'

images:
  - '${_AR_HOSTNAME}/$PROJECT_ID/${_AR_REPOSITORY}/feedback-api:latest'
  - '${_AR_HOSTNAME}/$PROJECT_ID/${_AR_REPOSITORY}/feedback-frontend:latest'

options:
  logging: CLOUD_LOGGING_ONLY

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/MONGO_CONNECTION_STRING/versions/latest
      env: _MONGO_CONNECTION_STRING